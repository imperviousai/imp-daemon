// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/imperviousai/imp-daemon/auth/state (interfaces: AuthState)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	state "github.com/imperviousai/imp-daemon/auth/state"
)

// MockAuthState is a mock of AuthState interface.
type MockAuthState struct {
	ctrl     *gomock.Controller
	recorder *MockAuthStateMockRecorder
}

// MockAuthStateMockRecorder is the mock recorder for MockAuthState.
type MockAuthStateMockRecorder struct {
	mock *MockAuthState
}

// NewMockAuthState creates a new mock instance.
func NewMockAuthState(ctrl *gomock.Controller) *MockAuthState {
	mock := &MockAuthState{ctrl: ctrl}
	mock.recorder = &MockAuthStateMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuthState) EXPECT() *MockAuthStateMockRecorder {
	return m.recorder
}

// DeleteAuth mocks base method.
func (m *MockAuthState) DeleteAuth(arg0 int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteAuth", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteAuth indicates an expected call of DeleteAuth.
func (mr *MockAuthStateMockRecorder) DeleteAuth(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteAuth", reflect.TypeOf((*MockAuthState)(nil).DeleteAuth), arg0)
}

// ListAuth mocks base method.
func (m *MockAuthState) ListAuth() ([]*state.AuthStateModel, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListAuth")
	ret0, _ := ret[0].([]*state.AuthStateModel)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListAuth indicates an expected call of ListAuth.
func (mr *MockAuthStateMockRecorder) ListAuth() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListAuth", reflect.TypeOf((*MockAuthState)(nil).ListAuth))
}

// SaveAuth mocks base method.
func (m *MockAuthState) SaveAuth(arg0 *state.AuthStateModel) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveAuth", arg0)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SaveAuth indicates an expected call of SaveAuth.
func (mr *MockAuthStateMockRecorder) SaveAuth(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveAuth", reflect.TypeOf((*MockAuthState)(nil).SaveAuth), arg0)
}

// UpdateAuth mocks base method.
func (m *MockAuthState) UpdateAuth(arg0 *state.AuthStateModel) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateAuth", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateAuth indicates an expected call of UpdateAuth.
func (mr *MockAuthStateMockRecorder) UpdateAuth(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateAuth", reflect.TypeOf((*MockAuthState)(nil).UpdateAuth), arg0)
}
