// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/imperviousai/freeimp/auth (interfaces: AuthService)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	state "github.com/imperviousai/freeimp/auth/state"
	grpc "google.golang.org/grpc"
)

// MockAuthService is a mock of AuthService interface.
type MockAuthService struct {
	ctrl     *gomock.Controller
	recorder *MockAuthServiceMockRecorder
}

// MockAuthServiceMockRecorder is the mock recorder for MockAuthService.
type MockAuthServiceMockRecorder struct {
	mock *MockAuthService
}

// NewMockAuthService creates a new mock instance.
func NewMockAuthService(ctrl *gomock.Controller) *MockAuthService {
	mock := &MockAuthService{ctrl: ctrl}
	mock.recorder = &MockAuthServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuthService) EXPECT() *MockAuthServiceMockRecorder {
	return m.recorder
}

// DeleteKey mocks base method.
func (m *MockAuthService) DeleteKey(arg0 int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteKey", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteKey indicates an expected call of DeleteKey.
func (mr *MockAuthServiceMockRecorder) DeleteKey(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteKey", reflect.TypeOf((*MockAuthService)(nil).DeleteKey), arg0)
}

// GenerateNewKey mocks base method.
func (m *MockAuthService) GenerateNewKey(arg0, arg1 string) (*state.AuthStateModel, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateNewKey", arg0, arg1)
	ret0, _ := ret[0].(*state.AuthStateModel)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateNewKey indicates an expected call of GenerateNewKey.
func (mr *MockAuthServiceMockRecorder) GenerateNewKey(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateNewKey", reflect.TypeOf((*MockAuthService)(nil).GenerateNewKey), arg0, arg1)
}

// ListKeys mocks base method.
func (m *MockAuthService) ListKeys() ([]*state.AuthStateModel, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListKeys")
	ret0, _ := ret[0].([]*state.AuthStateModel)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListKeys indicates an expected call of ListKeys.
func (mr *MockAuthServiceMockRecorder) ListKeys() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListKeys", reflect.TypeOf((*MockAuthService)(nil).ListKeys))
}

// Stream mocks base method.
func (m *MockAuthService) Stream() grpc.StreamServerInterceptor {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Stream")
	ret0, _ := ret[0].(grpc.StreamServerInterceptor)
	return ret0
}

// Stream indicates an expected call of Stream.
func (mr *MockAuthServiceMockRecorder) Stream() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Stream", reflect.TypeOf((*MockAuthService)(nil).Stream))
}

// Unary mocks base method.
func (m *MockAuthService) Unary() grpc.UnaryServerInterceptor {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Unary")
	ret0, _ := ret[0].(grpc.UnaryServerInterceptor)
	return ret0
}

// Unary indicates an expected call of Unary.
func (mr *MockAuthServiceMockRecorder) Unary() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Unary", reflect.TypeOf((*MockAuthService)(nil).Unary))
}

// UpdateKey mocks base method.
func (m *MockAuthService) UpdateKey(arg0 int64, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateKey", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateKey indicates an expected call of UpdateKey.
func (mr *MockAuthServiceMockRecorder) UpdateKey(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateKey", reflect.TypeOf((*MockAuthService)(nil).UpdateKey), arg0, arg1, arg2)
}
