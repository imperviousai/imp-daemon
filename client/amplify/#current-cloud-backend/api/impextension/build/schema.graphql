
type DID {
  shortFormDid: String!
  username: String!
  longFormDid: String!
  avatarUrl: String
  lastUpdated: AWSTimestamp
  name: String
  email: String
  profileType: String
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelSubscriptionStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  in: [String]
  notIn: [String]
}

input ModelSubscriptionIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  in: [Int]
  notIn: [Int]
}

input ModelSubscriptionFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  in: [Float]
  notIn: [Float]
}

input ModelSubscriptionBooleanInput {
  ne: Boolean
  eq: Boolean
}

input ModelSubscriptionIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  in: [ID]
  notIn: [ID]
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelDIDConnection {
  items: [DID]!
  nextToken: String
}

input ModelDIDFilterInput {
  shortFormDid: ModelStringInput
  username: ModelStringInput
  longFormDid: ModelStringInput
  avatarUrl: ModelStringInput
  lastUpdated: ModelIntInput
  name: ModelStringInput
  email: ModelStringInput
  profileType: ModelStringInput
  and: [ModelDIDFilterInput]
  or: [ModelDIDFilterInput]
  not: ModelDIDFilterInput
}

type Query {
  getDID(shortFormDid: String!, username: String!): DID
  listDIDS(shortFormDid: String, username: ModelStringKeyConditionInput, filter: ModelDIDFilterInput, limit: Int, nextToken: String, sortDirection: ModelSortDirection): ModelDIDConnection
}

input ModelDIDConditionInput {
  longFormDid: ModelStringInput
  avatarUrl: ModelStringInput
  lastUpdated: ModelIntInput
  name: ModelStringInput
  email: ModelStringInput
  profileType: ModelStringInput
  and: [ModelDIDConditionInput]
  or: [ModelDIDConditionInput]
  not: ModelDIDConditionInput
}

input CreateDIDInput {
  shortFormDid: String!
  username: String!
  longFormDid: String!
  avatarUrl: String
  lastUpdated: AWSTimestamp
  name: String
  email: String
  profileType: String
}

input UpdateDIDInput {
  shortFormDid: String!
  username: String!
  longFormDid: String
  avatarUrl: String
  lastUpdated: AWSTimestamp
  name: String
  email: String
  profileType: String
}

input DeleteDIDInput {
  shortFormDid: String!
  username: String!
}

type Mutation {
  createDID(input: CreateDIDInput!, condition: ModelDIDConditionInput): DID
  updateDID(input: UpdateDIDInput!, condition: ModelDIDConditionInput): DID
  deleteDID(input: DeleteDIDInput!, condition: ModelDIDConditionInput): DID
}

type Subscription {
  onCreateDID: DID @aws_subscribe(mutations: ["createDID"])
  onUpdateDID: DID @aws_subscribe(mutations: ["updateDID"])
  onDeleteDID: DID @aws_subscribe(mutations: ["deleteDID"])
}

input ModelStringKeyConditionInput {
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  between: [String]
  beginsWith: String
}

