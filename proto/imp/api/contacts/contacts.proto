/// Allows for Contacts actions for Impervious nodes
syntax = 'proto3';

package contacts;

option go_package = "github.com/imperviousai/freeimp/gen";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
	info: {
		title: "Contacts Services";
		version: "1.0";
		contact: {
			name: "Impervious AI";
			url: "https://impervious.ai";
		};
	};
	external_docs: {
		url: "https://docs.impervious.ai";
		description: "Documentation on IMP";
	}
	schemes: HTTP;
	schemes: HTTPS;
	schemes: WSS;
	consumes: "application/json";
	produces: "application/json";
	security_definitions: {
		security: {
			key: "api_key";
			value: {
				type: 2;
				description: "An API key generated by the daemon for authentication";
				name: "Grpc-Metadata-X-API-KEY";
				in: 3;
			}
		}
	}
	security: {
		security_requirement: {
			key: "api_key";
		}
	}
};

/**
* Contacts service allows Contacts actions from the Impervious node.
*/
service Contacts {
	/**
	* GetContactsList gets all of the contacts the user has saved.
	*/
	rpc GetContactsList(GetContactsListRequest) returns (GetContactsListResponse) {
		option (google.api.http) = {
			get: "/v1/contacts"
		};
	}

	/**
	* GetContact gets a specific contact the user has saved.
	*/
	rpc GetContact(GetContactRequest) returns (GetContactResponse) {
		option (google.api.http) = {
			get: "/v1/contacts/{id}"
		};
	}

	/**
	* CreateContact will create a specific contact. If the contact DID has not been added to the ID database,
	* it will be added first.
	*/
	rpc CreateContact(CreateContactRequest) returns (CreateContactResponse) {
		option (google.api.http) = {
			post: "/v1/contacts/create"
			body: "*"
		};
	}

	/**
	* CreateContacts will create multiple contacts passed in. A batch version of CreateContact.
	*/
	rpc CreateContacts(CreateContactsRequest) returns (CreateContactsResponse) {
		option (google.api.http) = {
			post: "/v1/contacts/createMulti"
			body: "*"
		};
	}

	/**
	* UpdateContact will update a specific contact.
	*/
	rpc UpdateContact(UpdateContactRequest) returns (UpdateContactResponse) {
		option (google.api.http) = {
			post: "/v1/contacts/update"
			body: "*"
		};
	}

	/**
	* DeleteContact will delete a specific contact.
	*/
	rpc DeleteContact(DeleteContactRequest) returns (DeleteContactResponse) {
		option (google.api.http) = {
			delete: "/v1/contacts/{id}"
		};
	}
}


message Contact {
	int64 id = 1; // The ID of the contact
	string did = 2; // The DID of the contact
	string didDocument = 3; // The DID document json of the contact
	string name = 4; // The name of the contact
	string userDID = 5; // The user DID that this contact has been saved to
	bool hasContacted = 6; // Whether or not this contact has been contacted before
	string metadata = 7; // The application specific metadata json for this contact
}

message ContactUpdate {
	int64 id = 1; // The ID of the contact
	string did = 2; // The DID of the contact
	string name = 3; // The name of the contact
	string metadata = 4; // The application specific metadata json for this contact
}

/**
 * Represents a request to get a contact list.
 */
message GetContactsListRequest {
}

/**
 * Represents a response containing the contact list.
 */
message GetContactsListResponse {
	repeated Contact contacts = 1; // The contact list
}

/**
 * Represents a request to get a contact.
 */
message GetContactRequest {
	int64 id = 1; // The ID of the contact to retrieve
}

/**
 * Represents a response containing the contact.
 */
message GetContactResponse {
	Contact contact = 1; // The contact retrieved
}

/**
 * Represents a request to create a contact.
 */
message CreateContactRequest {
	Contact contact = 1; // The contact to created
}

/**
 * Represents a response containing the contact created.
 */
message CreateContactResponse {
	Contact contact = 1; // The contact created
}

/**
 * Represents a request to create multiple contacts.
 */
message CreateContactsRequest {
	repeated Contact contacts = 1; // The contacts to created
}

/**
 * Represents a response containing the contacts created.
 */
message CreateContactsResponse {
	repeated Contact contacts = 1; // The contacts created
}

/**
 * Represents a request to update a contact.
 */
message UpdateContactRequest {
	ContactUpdate contact = 1; // The contact to update
}

/**
 * Represents a response containing the contact updated.
 */
message UpdateContactResponse {
	Contact contact = 1; // The contact update
}

/**
 * Represents a request to delete a contact.
 */
message DeleteContactRequest {
	int64 id = 1; // The ID of the contact to delete
}

/**
 * Represents a response containing the contact deletion event.
 */
message DeleteContactResponse {
}
