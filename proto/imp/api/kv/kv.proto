/// Allows for IPFS actions for Impervious nodes
syntax = 'proto3';

package kv;

option go_package = "github.com/imperviousai/imp-daemon/gen";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
	info: {
		title: "KV Services";
		version: "1.0";
		contact: {
			name: "Impervious AI";
			url: "https://impervious.ai";
		};
	};
	external_docs: {
		url: "https://docs.impervious.ai";
		description: "Documentation on IMP";
	}
	schemes: HTTP;
	schemes: HTTPS;
	schemes: WSS;
	consumes: "application/json";
	produces: "application/json";
	security_definitions: {
		security: {
			key: "api_key";
			value: {
				type: 2;
				description: "An API key generated by the daemon for authentication";
				name: "Grpc-Metadata-X-API-KEY";
				in: 3;
			}
		}
	}
	security: {
		security_requirement: {
			key: "api_key";
		}
	}
};

/**
* KV service allows KV actions from the Impervious node.
*/
service KV {
	/**
	* GetKey will retrieve a key
	*/
	rpc GetKey(GetKeyRequest) returns (GetKeyResponse) {
		option (google.api.http) = {
			post: "/v1/kv/getkey"
			body: "*"
		};
	}

	/**
	* SetKey will set a key
	*/
	rpc SetKey(SetKeyRequest) returns (SetKeyResponse) {
		option (google.api.http) = {
			post: "/v1/kv/setkey"
			body: "*"
		};
	}

	/**
	* DelKey will delete a key
	*/
	rpc DelKey(DelKeyRequest) returns (DelKeyResponse) {
		option (google.api.http) = {
			post: "/v1/kv/delkey"
			body: "*"
		};
	}
}

/**
 * Represents a request to get a key and value.
 */
message GetKeyRequest {
	string key = 1; // The name of the key to get
}

/**
 * Represents a response containing the value
 */
message GetKeyResponse {
	string value = 1; // The contents of the value
}

/**
 * Represents a request to get a key and value.
 */
message SetKeyRequest {
	string key = 1; // The name of the key to set
	string value = 2; // The value to set
}

/**
 * Represents a response for HTTP 200=Set
 */
message SetKeyResponse {
}

/**
 * Represents a request to delete a key and value.
 */
message DelKeyRequest {
	string key = 1; // The name of the key to del
}

/**
 * Represents a response for deletion HTTP 200=Deleted
 */
message DelKeyResponse {
}
