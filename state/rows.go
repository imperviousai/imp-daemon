package state

import "database/sql"

//go:generate mockgen --destination=./mock/rows_mock.go --package=mock github.com/imperviousai/freeimp/state Rows

//go:generate mockgen --destination=./mock/result_mock.go --package=mock github.com/imperviousai/freeimp/state Result

// Create a passthrough interface for db.Rows to allow for mocking
type Rows interface {
	Next() bool
	NextResultSet() bool
	Err() error
	Columns() ([]string, error)
	ColumnTypes() ([]*sql.ColumnType, error)
	Scan(dest ...interface{}) error
	Close() error
}

// Create a passthrough interface for db.Result to allow for mocking
type Result interface {
	// LastInsertId returns the integer generated by the database
	// in response to a command. Typically this will be from an
	// "auto increment" column when inserting a new row. Not all
	// databases support this feature, and the syntax of such
	// statements varies.
	LastInsertId() (int64, error)

	// RowsAffected returns the number of rows affected by an
	// update, insert, or delete. Not every database or database
	// driver may support this.
	RowsAffected() (int64, error)
}
